// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: lock.proto

package gonetlockprotobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockType int32

const (
	LockType_WRITE LockType = 0
	LockType_READ  LockType = 1
)

// Enum value maps for LockType.
var (
	LockType_name = map[int32]string{
		0: "WRITE",
		1: "READ",
	}
	LockType_value = map[string]int32{
		"WRITE": 0,
		"READ":  1,
	}
)

func (x LockType) Enum() *LockType {
	p := new(LockType)
	*p = x
	return p
}

func (x LockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockType) Descriptor() protoreflect.EnumDescriptor {
	return file_lock_proto_enumTypes[0].Descriptor()
}

func (LockType) Type() protoreflect.EnumType {
	return &file_lock_proto_enumTypes[0]
}

func (x LockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockType.Descriptor instead.
func (LockType) EnumDescriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{0}
}

type LockMode int32

const (
	LockMode_BREAK LockMode = 0
	LockMode_WAIT  LockMode = 1
)

// Enum value maps for LockMode.
var (
	LockMode_name = map[int32]string{
		0: "BREAK",
		1: "WAIT",
	}
	LockMode_value = map[string]int32{
		"BREAK": 0,
		"WAIT":  1,
	}
)

func (x LockMode) Enum() *LockMode {
	p := new(LockMode)
	*p = x
	return p
}

func (x LockMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockMode) Descriptor() protoreflect.EnumDescriptor {
	return file_lock_proto_enumTypes[1].Descriptor()
}

func (LockMode) Type() protoreflect.EnumType {
	return &file_lock_proto_enumTypes[1]
}

func (x LockMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockMode.Descriptor instead.
func (LockMode) EnumDescriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{1}
}

type LockConnectionDrop int32

const (
	LockConnectionDrop_RELEASE LockConnectionDrop = 0
	LockConnectionDrop_IGNORE  LockConnectionDrop = 1
)

// Enum value maps for LockConnectionDrop.
var (
	LockConnectionDrop_name = map[int32]string{
		0: "RELEASE",
		1: "IGNORE",
	}
	LockConnectionDrop_value = map[string]int32{
		"RELEASE": 0,
		"IGNORE":  1,
	}
)

func (x LockConnectionDrop) Enum() *LockConnectionDrop {
	p := new(LockConnectionDrop)
	*p = x
	return p
}

func (x LockConnectionDrop) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockConnectionDrop) Descriptor() protoreflect.EnumDescriptor {
	return file_lock_proto_enumTypes[2].Descriptor()
}

func (LockConnectionDrop) Type() protoreflect.EnumType {
	return &file_lock_proto_enumTypes[2]
}

func (x LockConnectionDrop) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockConnectionDrop.Descriptor instead.
func (LockConnectionDrop) EnumDescriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{2}
}

type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       string             `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName       string             `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	Type           LockType           `protobuf:"varint,3,opt,name=type,proto3,enum=gonetlock.LockType" json:"type,omitempty"`
	Mode           LockMode           `protobuf:"varint,4,opt,name=mode,proto3,enum=gonetlock.LockMode" json:"mode,omitempty"`
	WaitTimeout    uint32             `protobuf:"varint,5,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout,omitempty"`
	LockTimeout    uint32             `protobuf:"varint,6,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	ConnectionDrop LockConnectionDrop `protobuf:"varint,7,opt,name=connection_drop,json=connectionDrop,proto3,enum=gonetlock.LockConnectionDrop" json:"connection_drop,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{0}
}

func (x *LockRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *LockRequest) GetType() LockType {
	if x != nil {
		return x.Type
	}
	return LockType_WRITE
}

func (x *LockRequest) GetMode() LockMode {
	if x != nil {
		return x.Mode
	}
	return LockMode_BREAK
}

func (x *LockRequest) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *LockRequest) GetLockTimeout() uint32 {
	if x != nil {
		return x.LockTimeout
	}
	return 0
}

func (x *LockRequest) GetConnectionDrop() LockConnectionDrop {
	if x != nil {
		return x.ConnectionDrop
	}
	return LockConnectionDrop_RELEASE
}

type LockRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       string             `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName       string             `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	Mode           LockMode           `protobuf:"varint,3,opt,name=mode,proto3,enum=gonetlock.LockMode" json:"mode,omitempty"`
	WaitTimeout    uint32             `protobuf:"varint,4,opt,name=wait_timeout,json=waitTimeout,proto3" json:"wait_timeout,omitempty"`
	LockTimeout    uint32             `protobuf:"varint,5,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	ConnectionDrop LockConnectionDrop `protobuf:"varint,6,opt,name=connection_drop,json=connectionDrop,proto3,enum=gonetlock.LockConnectionDrop" json:"connection_drop,omitempty"`
}

func (x *LockRefreshRequest) Reset() {
	*x = LockRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRefreshRequest) ProtoMessage() {}

func (x *LockRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRefreshRequest.ProtoReflect.Descriptor instead.
func (*LockRefreshRequest) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{1}
}

func (x *LockRefreshRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockRefreshRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *LockRefreshRequest) GetMode() LockMode {
	if x != nil {
		return x.Mode
	}
	return LockMode_BREAK
}

func (x *LockRefreshRequest) GetWaitTimeout() uint32 {
	if x != nil {
		return x.WaitTimeout
	}
	return 0
}

func (x *LockRefreshRequest) GetLockTimeout() uint32 {
	if x != nil {
		return x.LockTimeout
	}
	return 0
}

func (x *LockRefreshRequest) GetConnectionDrop() LockConnectionDrop {
	if x != nil {
		return x.ConnectionDrop
	}
	return LockConnectionDrop_RELEASE
}

type LockReleaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockReleaseRequest) Reset() {
	*x = LockReleaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReleaseRequest) ProtoMessage() {}

func (x *LockReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReleaseRequest.ProtoReflect.Descriptor instead.
func (*LockReleaseRequest) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{2}
}

func (x *LockReleaseRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockReleaseRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockStatusRequest) Reset() {
	*x = LockStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockStatusRequest) ProtoMessage() {}

func (x *LockStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockStatusRequest.ProtoReflect.Descriptor instead.
func (*LockStatusRequest) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{3}
}

func (x *LockStatusRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockStatusRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockDeniedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockDeniedResponse) Reset() {
	*x = LockDeniedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockDeniedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockDeniedResponse) ProtoMessage() {}

func (x *LockDeniedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockDeniedResponse.ProtoReflect.Descriptor instead.
func (*LockDeniedResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{4}
}

func (x *LockDeniedResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockDeniedResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockWaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockWaitResponse) Reset() {
	*x = LockWaitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWaitResponse) ProtoMessage() {}

func (x *LockWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWaitResponse.ProtoReflect.Descriptor instead.
func (*LockWaitResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{5}
}

func (x *LockWaitResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockWaitResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockGrantedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockGrantedResponse) Reset() {
	*x = LockGrantedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockGrantedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockGrantedResponse) ProtoMessage() {}

func (x *LockGrantedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockGrantedResponse.ProtoReflect.Descriptor instead.
func (*LockGrantedResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{6}
}

func (x *LockGrantedResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockGrantedResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockWaitTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockWaitTimeoutResponse) Reset() {
	*x = LockWaitTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWaitTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWaitTimeoutResponse) ProtoMessage() {}

func (x *LockWaitTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWaitTimeoutResponse.ProtoReflect.Descriptor instead.
func (*LockWaitTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{7}
}

func (x *LockWaitTimeoutResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockWaitTimeoutResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockTimeoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockTimeoutResponse) Reset() {
	*x = LockTimeoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockTimeoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockTimeoutResponse) ProtoMessage() {}

func (x *LockTimeoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockTimeoutResponse.ProtoReflect.Descriptor instead.
func (*LockTimeoutResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{8}
}

func (x *LockTimeoutResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockTimeoutResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
}

func (x *LockReleaseResponse) Reset() {
	*x = LockReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockReleaseResponse) ProtoMessage() {}

func (x *LockReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockReleaseResponse.ProtoReflect.Descriptor instead.
func (*LockReleaseResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{9}
}

func (x *LockReleaseResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockReleaseResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type LockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LockName string   `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	Type     LockType `protobuf:"varint,3,opt,name=type,proto3,enum=gonetlock.LockType" json:"type,omitempty"`
}

func (x *LockStatusResponse) Reset() {
	*x = LockStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockStatusResponse) ProtoMessage() {}

func (x *LockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockStatusResponse.ProtoReflect.Descriptor instead.
func (*LockStatusResponse) Descriptor() ([]byte, []int) {
	return file_lock_proto_rawDescGZIP(), []int{10}
}

func (x *LockStatusResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LockStatusResponse) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *LockStatusResponse) GetType() LockType {
	if x != nil {
		return x.Type
	}
	return LockType_WRITE
}

var File_lock_proto protoreflect.FileDescriptor

var file_lock_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x6f,
	0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xa7, 0x02, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x67, 0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x6f, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6e, 0x65, 0x74,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x6f,
	0x70, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x6f,
	0x70, 0x22, 0x85, 0x02, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x67, 0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x46, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6e,
	0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x4c, 0x6f, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b,
	0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x6b,
	0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x6b, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x17, 0x4c, 0x6f, 0x63, 0x6b, 0x57,
	0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13,
	0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a,
	0x13, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x77,
	0x0a, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67,
	0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x1f, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x2a, 0x1f, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x2a, 0x2d, 0x0a, 0x12, 0x4c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x6f, 0x70, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b,
	0x2f, 0x67, 0x6f, 0x6e, 0x65, 0x74, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x67, 0x6f, 0x6e, 0x65, 0x74,
	0x6c, 0x6f, 0x63, 0x6b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lock_proto_rawDescOnce sync.Once
	file_lock_proto_rawDescData = file_lock_proto_rawDesc
)

func file_lock_proto_rawDescGZIP() []byte {
	file_lock_proto_rawDescOnce.Do(func() {
		file_lock_proto_rawDescData = protoimpl.X.CompressGZIP(file_lock_proto_rawDescData)
	})
	return file_lock_proto_rawDescData
}

var file_lock_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_lock_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_lock_proto_goTypes = []interface{}{
	(LockType)(0),                   // 0: gonetlock.LockType
	(LockMode)(0),                   // 1: gonetlock.LockMode
	(LockConnectionDrop)(0),         // 2: gonetlock.LockConnectionDrop
	(*LockRequest)(nil),             // 3: gonetlock.LockRequest
	(*LockRefreshRequest)(nil),      // 4: gonetlock.LockRefreshRequest
	(*LockReleaseRequest)(nil),      // 5: gonetlock.LockReleaseRequest
	(*LockStatusRequest)(nil),       // 6: gonetlock.LockStatusRequest
	(*LockDeniedResponse)(nil),      // 7: gonetlock.LockDeniedResponse
	(*LockWaitResponse)(nil),        // 8: gonetlock.LockWaitResponse
	(*LockGrantedResponse)(nil),     // 9: gonetlock.LockGrantedResponse
	(*LockWaitTimeoutResponse)(nil), // 10: gonetlock.LockWaitTimeoutResponse
	(*LockTimeoutResponse)(nil),     // 11: gonetlock.LockTimeoutResponse
	(*LockReleaseResponse)(nil),     // 12: gonetlock.LockReleaseResponse
	(*LockStatusResponse)(nil),      // 13: gonetlock.LockStatusResponse
}
var file_lock_proto_depIdxs = []int32{
	0, // 0: gonetlock.LockRequest.type:type_name -> gonetlock.LockType
	1, // 1: gonetlock.LockRequest.mode:type_name -> gonetlock.LockMode
	2, // 2: gonetlock.LockRequest.connection_drop:type_name -> gonetlock.LockConnectionDrop
	1, // 3: gonetlock.LockRefreshRequest.mode:type_name -> gonetlock.LockMode
	2, // 4: gonetlock.LockRefreshRequest.connection_drop:type_name -> gonetlock.LockConnectionDrop
	0, // 5: gonetlock.LockStatusResponse.type:type_name -> gonetlock.LockType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_lock_proto_init() }
func file_lock_proto_init() {
	if File_lock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockReleaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockDeniedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWaitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockGrantedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWaitTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockTimeoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lock_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lock_proto_goTypes,
		DependencyIndexes: file_lock_proto_depIdxs,
		EnumInfos:         file_lock_proto_enumTypes,
		MessageInfos:      file_lock_proto_msgTypes,
	}.Build()
	File_lock_proto = out.File
	file_lock_proto_rawDesc = nil
	file_lock_proto_goTypes = nil
	file_lock_proto_depIdxs = nil
}
